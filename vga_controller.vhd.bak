LIBRARY ieee;
USE ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity VGA_controller is
	Port(
	clk : in  STD_LOGIC; --25 MHz main clock.
	Data : in std_logic;
	Hsync_camara : in  STD_LOGIC;
	Vsync_camara : in  STD_LOGIC;
	Hsync_VGA : out std_logic;
	Vsync_VGA : out std_logic;
	R,G,B : out  STD_LOGIC_VECTOR (3 downto 0));
end VGA_controller;

architecture behavioral of VGA_controller is
attribute chip_pin : string;
attribute chip_pin of clk : signal is "N14";
attribute chip_pin of Hsync_camara:signal is "W10";
attribute chip_pin of Vsync_camara:signal is "V10";
attribute chip_pin of Hsync_VGA : signal is "N3";
attribute chip_pin of Vsync_VGA : signal is "N1";
attribute chip_pin of R : signal is "AA1, V1, Y2, Y1";
attribute chip_pin of G : signal is "W1, T2, R2, R1";
attribute chip_pin of B : signal is "P1, T1, P4, N2";

signal Pos_v: integer :=0;
signal Pos_h: integer := 0;
signal addra:integer range 0 to 172800 :=0;
signal flag: std_logic;
signal count: integer range 0 to 640;
signal clk_b:std_logic;

constant Horizontal_pixel:integer := 640;
constant FrontPorch_H:integer := 16;
constant SyncPulse_H:integer := 96;
constant BackPorch_H:integer := 48;
constant HTOT:integer:=Horizontal_Pixel+FrontPorch_H+SyncPulse_H+BackPorch_H;

constant Vertical_pixel:integer := 480;
constant FrontPorch_V:integer := 10;
constant SyncPulse_V:integer := 2;
constant BackPorch_V:integer := 33;
constant VTOT:integer :=Vertical_Pixel+FrontPorch_V+SyncPulse_V+BackPorch_V;

constant size:integer:=172800;

begin
reloj:process(clk)
begin
	if(rising_edge(clk)) then
		if(clk_b='0') then
			clk_b<='1';
		else
			clk_b<='0';
		end if;
	end if;
end process;

Posiciones:process(clk_b)
begin
	if(rising_edge(clk_b)) then
	Vsync_VGA<=Vsync_camara;
	Hsync_VGA<=Hsync_camara;
		if(Pos_h=HTOT) then
			pos_h<=0;
			if(Pos_v=VTOT) then
				Pos_v<=0;
			else
				Pos_v<=Pos_v+1;
			end if;
		else
			pos_h<=Pos_h+1;
		end if;
	end if;
end process;

bandera:process(clk_b)	
begin
	if(rising_edge(clk_b)) then
		if(Pos_h>=SyncPulse_H+BackPorch_H and 
			Pos_h<Horizontal_Pixel+SyncPulse_H+BackPorch_H and 
			Pos_v>=SyncPulse_V+BackPorch_V and 
			Pos_v<Vertical_Pixel+SyncPulse_V+BackPorch_V) then
			flag<='1';
		else
			flag<='0';
		end if;
	end if;
end process;

dibujo:process(flag)
begin
	if(flag='1') then
		if(Data='1') then
			R<="1111";
			G<="1111";
			B<="1111";
		else
			R<="0000";
			G<="0000";
			B<="0000";
		end if;
	else
		R<="0000";
		G<="0000";
		B<="0000";
	end if;
end process;


end behavioral;